{"version":3,"sources":["hooks/useInput.js","routes/Auth/SignIn.js","routes/Auth/SignUp.js","routes/Auth/index.js","components/Nav.js","routes/Dashboard.js","components/EmployeeTable.js","routes/Employee.js","routes/EmployeeDev.js","utils/DateFormat.js","routes/NewEmployee.js","components/ProjectTable.js","routes/Project.js","routes/NewProject.js","routes/ProjectDetail/Summary.js","routes/ProjectDetail/index.js","routes/ProjectDetail/TeamMembers/Member.js","routes/ProjectDetail/TeamMembers/index.js","routes/ProjectDetail/TeamMembers/NewTeamMember.js","components/ClientTable.js","routes/Client.js","routes/NewClient.js","components/Router.js","App.js","index.js"],"names":["useInput","init","useState","value","setValue","onChange","e","target","useInputForEmpNo","invalid","setInvalid","onBlur","test","useInputForPw","id","password","Form","style","width","minWidth","TextInput","labelText","type","required","invalidText","Button","marginTop","empNo","passwordConfirm","useInputForPwConfirm","onSubmit","preventDefault","url","formData","axios","method","data","sendData","then","response","console","log","Wrapper","styled","div","action","setAction","ContentSwitcher","marginBottom","Switch","text","SignIn","SignUp","Nav","active","subActive","dashboardProps","isActive","employeesProps","employeesAllProps","employeesDevProps","projectsProps","clientsProps","className","render","isSideNavExpanded","onClickSideNavExpand","aria-label","onClick","href","prefix","expanded","title","Dashboard","TableContainer","DataTable","Table","TableHead","TableRow","TableBody","TableCell","TableHeader","CustomTable","titleProps","headers","key","header","push","map","v","emp_no","rows","getHeaderProps","row","cells","cell","p","StoryContent","setData","useEffect","get","res","catch","err","content","margin","EmployeeTable","Loading","height","Employee","originalDate","seperator","year","getFullYear","month","getMonth","date","getDate","deptList","setDeptList","empName","ssn","useInputForSSN","finalEdu","enterDate","setEnterDate","deptNo","setDeptNo","toEmployee","setToEmployee","emp_name","final_edu","enter_date","DateFormat","dept_no","DatePicker","datePickerType","dateFormat","onClose","DatePickerInput","pattern","placeholder","Select","defaultValue","SelectItem","disabled","hidden","dept_name","to","NewEmployee","toDetail","setToDetail","detailId","setDetailId","proj_no","cursor","ProjectTable","Project","clientList","setClientList","projName","startDate","setStartDate","endDate","setEndDate","cliId","setCliId","toProject","setToProject","proj_name","start_date","end_date","cli_id","formNoValidate","cli_name_ko","NewProject","Summary","StructuredList","head","cli_name_en","useParams","toTeamMembers","setToMembers","ProjectDetail","Member","Tile","member_id","role","join_date","out_date","toNew","setToNew","TeamMembers","devList","setDevList","setEmpNo","setRole","joinDate","setJoinDate","outDate","setOutDate","toMember","setToMember","diabled","NewTeamMember","ClientTable","Client","cliNameKo","cliNameEn","rep","handsel","toClient","setToClient","representative","NewClient","LoggedInRoutes","exact","path","component","EmployeeDev","NewTeamMembers","LoggedOutRoutes","Auth","AppRouter","isLoggedIn","App","Router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3a28da4b.chunk.js","sourcesContent":["import { useState } from 'react'\n\nconst useInput = init => {\n  const [value, setValue] = useState(init)\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e\n    setValue(value)\n  }\n\n  return { value, onChange }\n}\n\nconst useInputForEmpNo = init => {\n  const [value, setValue] = useState(init)\n  const [invalid, setInvalid] = useState(init)\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e\n    setValue(value)\n  }\n\n  const onBlur = e => {\n    setInvalid(!/^[0-9]{8}$/.test(value))\n  }\n\n  return { value, invalid, onChange, onBlur }\n}\n\nconst useInputForPw = init => {\n  const [value, setValue] = useState(init)\n  const [invalid, setInvalid] = useState(false)\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e\n    setValue(value)\n  }\n\n  const onBlur = e => {\n    setInvalid(!/(?=.*\\d)(?=.*[a-z]).{6,}/.test(value))\n  }\n\n  return { value, invalid, setInvalid, onChange, onBlur }\n}\n\nconst useInputForPwConfirm = init => {\n  const [value, setValue] = useState(init)\n  const [invalid, setInvalid] = useState(false)\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e\n    setValue(value)\n  }\n\n  return { value, invalid, setInvalid, onChange }\n}\n\nconst useInputForSSN = init => {\n  const [value, setValue] = useState(init)\n  const [invalid, setInvalid] = useState(false)\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e\n    setValue(value)\n  }\n\n  const onBlur = e => {\n    setInvalid(!/^\\d{6}-\\d{7}$/.test(value))\n  }\n\n  return { value, invalid, onChange, onBlur }\n}\n\nexport { useInput }\nexport { useInputForEmpNo }\nexport { useInputForPw }\nexport { useInputForPwConfirm }\nexport { useInputForSSN }\n","import React from 'react'\nimport { Button, Form, TextInput } from 'carbon-components-react'\n\nimport { useInput, useInputForPw } from '../../hooks/useInput'\n\nexport default () => {\n  const id = useInput('')\n  const password = useInputForPw('')\n\n  return (\n    <>\n      <Form style={{ width: '30vw', minWidth: '200px' }}>\n        <TextInput labelText=\"ID\" {...id} />\n        <TextInput\n          type=\"password\"\n          required\n          labelText=\"Password\"\n          invalidText=\"Your password must be at least 6 characters as well as contain at least one lowercase, and one number.\"\n          {...password}\n        />\n        <Button style={{ marginTop: '2vh' }}>Sign In</Button>\n      </Form>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button, Form, TextInput } from 'carbon-components-react'\nimport axios from 'axios'\n\nimport {\n  useInput,\n  useInputForEmpNo,\n  useInputForPw,\n  useInputForPwConfirm,\n} from '../../hooks/useInput'\n\nexport default () => {\n  const empNo = useInputForEmpNo('')\n  const id = useInput('')\n  const password = useInputForPw('')\n  const passwordConfirm = useInputForPwConfirm('')\n\n  const sendData = () => {\n    const url = `/api/employees/signup/${empNo.value}`\n    const formData = {\n      id: id.value,\n      password: password.value,\n    }\n\n    return axios({ method: 'PUT', url, data: formData })\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault()\n    sendData().then(response => console.log(response.data))\n    // TODO: Upper line is not yet complete.\n  }\n\n  return (\n    <>\n      <Form\n        style={{ width: '30vw', minWidth: '200px' }}\n        onSubmit={handleFormSubmit}\n      >\n        <TextInput\n          labelText=\"Emp No.\"\n          invalidText=\"Your employee Number must be 8 digit-number.\"\n          {...empNo}\n        />\n        <TextInput labelText=\"ID\" {...id} />\n        <TextInput\n          type=\"password\"\n          required\n          labelText=\"Password\"\n          invalidText=\"Your password must be at least 6 characters as well as contain at least one lowercase, and one number.\"\n          {...password}\n          onBlur={e => {\n            const {\n              target: { value },\n            } = e\n            password.setInvalid(!/(?=.*\\d)(?=.*[a-z]).{6,}/.test(value))\n            password.value === passwordConfirm.value\n              ? passwordConfirm.setInvalid(false)\n              : passwordConfirm.setInvalid(true)\n          }}\n        />\n        <TextInput\n          type=\"password\"\n          required\n          labelText=\"Password\"\n          invalidText=\"Password not match!\"\n          {...passwordConfirm}\n          onBlur={() => {\n            password.value === passwordConfirm.value\n              ? passwordConfirm.setInvalid(false)\n              : passwordConfirm.setInvalid(true)\n          }}\n        />\n        <Button style={{ marginTop: '2vh' }} type=\"submit\">\n          Sign Up\n        </Button>\n      </Form>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { ContentSwitcher, Switch } from 'carbon-components-react'\n\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\n\nconst Wrapper = styled.div`\n  min-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`\n\nexport default () => {\n  const [action, setAction] = useState('signIn')\n  const actionToggle = () => {\n    action === 'signIn' ? setAction('signUp') : setAction('signIn')\n  }\n\n  return (\n    <>\n      <Wrapper>\n        <ContentSwitcher\n          style={{ width: '30vw', minWidth: '200px', marginBottom: '2vh' }}\n          onChange={actionToggle}\n        >\n          <Switch text=\"Sign In\" />\n          <Switch text=\"Sign Up\" />\n        </ContentSwitcher>\n        {action === 'signIn' ? <SignIn /> : <SignUp />}\n      </Wrapper>\n    </>\n  )\n}\n","import React from 'react'\nimport AppSwitcher20 from '@carbon/icons-react/lib/app-switcher/20'\nimport {\n  Header,\n  HeaderContainer,\n  HeaderGlobalAction,\n  HeaderGlobalBar,\n  HeaderMenuButton,\n  HeaderName,\n  SideNav,\n  SideNavItems,\n  SideNavMenu,\n  SideNavMenuItem,\n  SideNavLink,\n  SkipToContent,\n} from 'carbon-components-react/lib/components/UIShell'\n\nconst Nav = ({ active, subActive }) => {\n  const dashboardProps = {\n    isActive: active === 'Dashboard',\n  }\n\n  const employeesProps = {\n    isActive: active === 'Employees',\n  }\n\n  const employeesAllProps = {\n    'aria-current': subActive === 'All' ? 'page' : '',\n  }\n\n  const employeesDevProps = {\n    'aria-current': subActive === 'Dev' ? 'page' : '',\n  }\n\n  const projectsProps = {\n    isActive: active === 'Projects',\n  }\n\n  const clientsProps = {\n    isActive: active === 'Clients',\n  }\n\n  return (\n    <div className=\"container\">\n      <HeaderContainer\n        render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n          <>\n            <Header aria-label=\"DD Management\">\n              <SkipToContent />\n              <HeaderMenuButton\n                aria-label=\"Open menu\"\n                onClick={onClickSideNavExpand}\n                isActive={isSideNavExpanded}\n              />\n              <HeaderName href=\"/\" prefix=\"DD\">\n                Management\n              </HeaderName>\n              <HeaderGlobalBar>\n                <HeaderGlobalAction\n                  aria-label=\"App Switcher\"\n                  onClick={() => {}}\n                >\n                  <AppSwitcher20 />\n                </HeaderGlobalAction>\n              </HeaderGlobalBar>\n              <SideNav\n                aria-label=\"Side navigation\"\n                expanded={isSideNavExpanded}\n              >\n                <SideNavItems>\n                  <SideNavLink href=\"/\" {...dashboardProps}>\n                    Dashboard\n                  </SideNavLink>\n                  <SideNavMenu title=\"Employees\" {...employeesProps}>\n                    <SideNavMenuItem href=\"/employees\" {...employeesAllProps}>\n                      All\n                    </SideNavMenuItem>\n                    <SideNavMenuItem\n                      href=\"/employees/dev\"\n                      {...employeesDevProps}\n                    >\n                      Developers\n                    </SideNavMenuItem>\n                  </SideNavMenu>\n                  <SideNavLink href=\"/projects\" {...projectsProps}>\n                    Projects\n                  </SideNavLink>\n                  <SideNavLink href=\"/clients\" {...clientsProps}>\n                    Clients\n                  </SideNavLink>\n                </SideNavItems>\n              </SideNav>\n            </Header>\n          </>\n        )}\n      />\n    </div>\n  )\n}\n\nexport default Nav\n","import React from 'react'\n\nimport Nav from '../components/Nav'\n\nconst Dashboard = () => {\n  return (\n    <>\n      <Nav active=\"Dashboard\" />\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DataTable } from 'carbon-components-react'\nconst {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n} = DataTable\n\nconst CustomTable = ({ data, type }) => {\n  const titleProps = {\n    title: type === 'All' ? 'All Employees' : 'Dev Employees',\n  }\n\n  // We would have a headers array like the following\n  // `key` is the name of the field on the row object itself for the header\n  // `header` will be the name you want rendered in the Table Header\n  const headers = [\n    {\n      key: 'emp_no',\n      header: 'Employee No.',\n    },\n    {\n      key: 'emp_name',\n      header: 'Employee Name',\n    },\n    {\n      key: 'ssn',\n      header: 'SSN',\n    },\n    {\n      key: 'final_edu',\n      header: 'Final Education',\n    },\n    {\n      key: 'enter_date',\n      header: 'Entered Date',\n    },\n    {\n      key: 'dept_name',\n      header: 'Department Name',\n    },\n  ]\n\n  if (type === 'Dev') {\n    headers.push({ key: 'tech_grade', header: 'Tech Grade' })\n  }\n\n  data.map(v => (v['id'] = v.emp_no))\n\n  return (\n    <DataTable\n      rows={data}\n      headers={headers}\n      render={({ rows, headers, getHeaderProps }) => (\n        <TableContainer {...titleProps}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <TableRow key={row.id}>\n                  {row.cells.map(cell => (\n                    <TableCell key={cell.id}>{cell.value}</TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  )\n}\n\nCustomTable.propTypes = {\n  data: PropTypes.array.isRequired,\n  type: PropTypes.string,\n}\n\nexport default CustomTable\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { Button, Loading } from 'carbon-components-react'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nimport Nav from '../components/Nav'\nimport EmployeeTable from '../components/EmployeeTable'\n\n// FIXME: not responsive.\nconst Wrapper = styled.p`\n  min-height: 75vh;\n  width: 100vw;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StoryContent = () => {\n  const [data, setData] = useState()\n\n  useEffect(() => {\n    axios\n      .get('/api/employees')\n      .then(res => setData(res.data))\n      .catch(err => console.log(err))\n  }, [])\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--offset-lg-3 bx--col-lg-13\">\n          <p style={{ margin: '5vh 0' }}>\n            {data ? (\n              <EmployeeTable data={data} type=\"All\" />\n            ) : (\n              <Wrapper>\n                <Loading className=\"loading\" />\n              </Wrapper>\n            )}\n          </p>\n          <Button href=\"/employees/new\">New Employee</Button>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <Content\n      id=\"main-content\"\n      style={{ margin: '0', width: '100%', height: '100%' }}\n    >\n      {content}\n    </Content>\n  )\n}\n\nconst Employee = () => {\n  return (\n    <>\n      <Nav active=\"Employees\" subActive=\"All\" />\n      <StoryContent />\n    </>\n  )\n}\n\nexport default Employee\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { Button, Loading } from 'carbon-components-react'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nimport Nav from '../components/Nav'\nimport EmployeeTable from '../components/EmployeeTable'\n\n// FIXME: not responsive.\nconst Wrapper = styled.p`\n  min-height: 75vh;\n  width: 100vw;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StoryContent = () => {\n  const [data, setData] = useState()\n\n  useEffect(() => {\n    axios\n      .get('/api/employees/tech_grade')\n      .then(res => setData(res.data))\n      .catch(err => console.log(err))\n  }, [])\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--offset-lg-3 bx--col-lg-13\">\n          <p style={{ margin: '5vh 0' }}>\n            {data ? (\n              <EmployeeTable data={data} type=\"Dev\" />\n            ) : (\n              <Wrapper>\n                <Loading className=\"loading\" />\n              </Wrapper>\n            )}\n          </p>\n          <Button href=\"/employees/new\">New Employee</Button>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <Content\n      id=\"main-content\"\n      style={{ margin: '0', width: '100%', height: '100%' }}\n    >\n      {content}\n    </Content>\n  )\n}\n\nconst Employee = () => {\n  return (\n    <>\n      <Nav active=\"Employees\" subActive=\"Dev\" />\n      <StoryContent />\n    </>\n  )\n}\n\nexport default Employee\n","export default (originalDate, seperator) => {\n  const year = originalDate.getFullYear()\n  const month = originalDate.getMonth()\n  const date = originalDate.getDate()\n\n  return `${year}${seperator}${month + 1}${seperator}${date}`\n}\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport {\n  Button,\n  DatePicker,\n  DatePickerInput,\n  Form,\n  Select,\n  SelectItem,\n  TextInput,\n} from 'carbon-components-react'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nimport Nav from '../components/Nav'\nimport { useInput, useInputForEmpNo, useInputForSSN } from '../hooks/useInput'\nimport DateFormat from '../utils/DateFormat'\n\nconst StoryContent = () => {\n  const [deptList, setDeptList] = useState()\n  const empNo = useInputForEmpNo('')\n  const empName = useInput('')\n  const ssn = useInputForSSN('')\n  const finalEdu = useInput('')\n  const [enterDate, setEnterDate] = useState()\n  const [deptNo, setDeptNo] = useState()\n  const [toEmployee, setToEmployee] = useState(false)\n\n  useEffect(() => {\n    axios\n      .get('/api/departments')\n      .then(res => {\n        setDeptList(res.data)\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  const sendData = () => {\n    const url = '/api/employees'\n    const formData = {\n      emp_no: empNo.value,\n      emp_name: empName.value,\n      ssn: ssn.value,\n      final_edu: finalEdu.value,\n      enter_date: DateFormat(enterDate, '-'),\n      dept_no: deptNo,\n    }\n\n    return axios({ method: 'POST', url, data: formData }).catch(err =>\n      console.log(err)\n    )\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault()\n    sendData()\n    setToEmployee(true)\n  }\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--offset-lg-3 bx--col-lg-13\">\n          <p style={{ margin: '5vh 0' }}>\n            <Form onSubmit={handleFormSubmit}>\n              <TextInput\n                labelText=\"Employee No.\"\n                invalidText=\"Employee Number must be 8 digit-number.\"\n                {...empNo}\n              />\n              <TextInput labelText=\"Employee Name\" {...empName} />\n              <TextInput\n                labelText=\"Social Security Number\"\n                invalidText=\"Social Security Number format is not correct.\"\n                {...ssn}\n              />\n              <TextInput labelText=\"Final Education\" {...finalEdu} />\n              <DatePicker\n                datePickerType=\"single\"\n                dateFormat={'Y/m/d'}\n                onClose={e => setEnterDate(e[0])}\n              >\n                <DatePickerInput\n                  labelText=\"Enter Date\"\n                  pattern=\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}\"\n                  placeholder=\"yyyy/mm/dd\"\n                />\n              </DatePicker>\n              <Select\n                defaultValue=\"placeholder-item\"\n                onChange={e => {\n                  const {\n                    target: { value },\n                  } = e\n                  setDeptNo(value)\n                }}\n              >\n                <SelectItem\n                  disabled\n                  hidden\n                  value=\"placeholder-item\"\n                  text=\"Select Department\"\n                />\n                {/* Import list from departments table */}\n                {deptList ? (\n                  deptList.map(v => (\n                    <SelectItem value={v.dept_no} text={v.dept_name} />\n                  ))\n                ) : (\n                  <SelectItem disabled value=\"fake\" text=\"Loading...\" />\n                )}\n              </Select>\n              <Button type=\"submit\" style={{ marginTop: '2vh' }}>\n                Submit\n              </Button>\n            </Form>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <>\n      {toEmployee ? (\n        <Redirect to=\"/employees\" />\n      ) : (\n        <Content\n          id=\"main-content\"\n          style={{ margin: '0', width: '100%', height: '100%' }}\n        >\n          {content}\n        </Content>\n      )}\n    </>\n  )\n}\n\nconst NewEmployee = () => {\n  return (\n    <>\n      <Nav active=\"Employees\" />\n      <StoryContent />\n    </>\n  )\n}\n\nexport default NewEmployee\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect } from 'react-router-dom'\nimport { DataTable } from 'carbon-components-react'\nconst {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n} = DataTable\n\nconst CustomTable = ({ data }) => {\n  const [toDetail, setToDetail] = useState(false)\n  const [detailId, setDetailId] = useState()\n\n  // We would have a headers array like the following\n  const headers = [\n    {\n      // `key` is the name of the field on the row object itself for the header\n      key: 'proj_no',\n      // `header` will be the name you want rendered in the Table Header\n      header: 'Project No.',\n    },\n    {\n      key: 'proj_name',\n      header: 'Project Name',\n    },\n    {\n      key: 'cli_name_ko',\n      header: 'Client Name',\n    },\n    {\n      key: 'start_date',\n      header: 'Start',\n    },\n    {\n      key: 'end_date',\n      header: 'End',\n    },\n  ]\n\n  data.map(v => (v['id'] = v.proj_no))\n\n  return toDetail ? (\n    <Redirect to={`/projects/detail/${detailId}`} />\n  ) : (\n    <DataTable\n      rows={data}\n      headers={headers}\n      render={({ rows, headers, getHeaderProps }) => (\n        <TableContainer title=\"Projects\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <TableRow\n                  key={row.id}\n                  style={{ cursor: 'pointer' }}\n                  onClick={() => {\n                    setDetailId(row.id)\n                    setToDetail(true)\n                  }}\n                >\n                  {row.cells.map(cell => (\n                    <TableCell key={cell.id}>{cell.value}</TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  )\n}\n\nCustomTable.propTypes = {\n  data: PropTypes.array.isRequired,\n}\n\nexport default CustomTable\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { Button, Loading } from 'carbon-components-react'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nimport Nav from '../components/Nav'\nimport ProjectTable from '../components/ProjectTable'\n\n// FIXME: not responsive.\nconst Wrapper = styled.p`\n  min-height: 75vh;\n  width: 100vw;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StoryContent = () => {\n  const [data, setData] = useState()\n\n  useEffect(() => {\n    axios\n      .get('/api/projects')\n      .then(res => {\n        setData(res.data)\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--offset-lg-3 bx--col-lg-13\">\n          <p style={{ margin: '5vh 0' }}>\n            {data ? (\n              <ProjectTable data={data} />\n            ) : (\n              <Wrapper>\n                <Loading className=\"loading\" />\n              </Wrapper>\n            )}\n          </p>\n          <Button href=\"/projects/new\">New Project</Button>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <Content\n      id=\"main-content\"\n      style={{\n        margin: '0',\n        height: '100%',\n        width: '100%',\n      }}\n    >\n      {content}\n    </Content>\n  )\n}\n\nconst Project = () => {\n  return (\n    <>\n      <Nav active=\"Projects\" />\n      <StoryContent />\n    </>\n  )\n}\n\nexport default Project\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport {\n  Button,\n  DatePicker,\n  DatePickerInput,\n  Form,\n  Select,\n  SelectItem,\n  TextInput,\n} from 'carbon-components-react'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nimport Nav from '../components/Nav'\nimport { useInput } from '../hooks/useInput'\nimport DateFormat from '../utils/DateFormat'\n\nconst StoryContent = () => {\n  const [clientList, setClientList] = useState()\n  const projName = useInput('')\n  const [startDate, setStartDate] = useState()\n  const [endDate, setEndDate] = useState()\n  const [cliId, setCliId] = useState()\n  const [toProject, setToProject] = useState(false)\n\n  useEffect(() => {\n    axios\n      .get('/api/clients')\n      .then(res => {\n        setClientList(res.data)\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  const sendData = () => {\n    const url = '/api/projects'\n    const formData = {\n      proj_name: projName.value,\n      start_date: DateFormat(startDate, '-'),\n      end_date: DateFormat(endDate, '-'),\n      cli_id: cliId,\n    }\n\n    return axios({ method: 'POST', url, data: formData }).catch(err =>\n      console.log(err)\n    )\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault()\n    sendData()\n    setToProject(true)\n  }\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--offset-lg-3 bx--col-lg-13\">\n          <p style={{ margin: '5vh 0' }}>\n            <Form onSubmit={handleFormSubmit} formNoValidate>\n              <TextInput labelText=\"Project Name\" {...projName} />\n              <DatePicker\n                id=\"date-picker\"\n                datePickerType=\"range\"\n                dateFormat={'Y/m/d'}\n                invalid={false}\n                onClose={e => {\n                  setStartDate(e[0])\n                  setEndDate(e[1])\n                }}\n              >\n                <DatePickerInput\n                  id=\"date-picker-input-id-start\"\n                  labelText=\"Start date\"\n                  pattern=\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}\"\n                  placeholder=\"yyyy/mm/dd\"\n                />\n                <DatePickerInput\n                  id=\"date-picker-input-id-end\"\n                  labelText=\"End date\"\n                  pattern=\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}\"\n                  placeholder=\"yyyy/mm/dd\"\n                />\n              </DatePicker>\n              <Select\n                defaultValue=\"placeholder-item\"\n                onChange={e => {\n                  const {\n                    target: { value },\n                  } = e\n                  setCliId(value)\n                }}\n              >\n                <SelectItem\n                  disabled\n                  hidden\n                  value=\"placeholder-item\"\n                  text=\"Select client\"\n                />\n                {/* Import list from clients table */}\n                {clientList ? (\n                  clientList.map(v => (\n                    <SelectItem value={v.cli_id} text={v.cli_name_ko} />\n                  ))\n                ) : (\n                  <SelectItem disabled value=\"fake\" text=\"Loading...\" />\n                )}\n              </Select>\n              <Button type=\"submit\" style={{ marginTop: '2vh' }}>\n                Submit\n              </Button>\n            </Form>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <>\n      {toProject ? (\n        <Redirect to=\"/projects\" />\n      ) : (\n        <Content\n          id=\"main-content\"\n          style={{\n            margin: '0',\n            height: '100%',\n            width: '100%',\n          }}\n        >\n          {content}\n        </Content>\n      )}\n    </>\n  )\n}\n\nconst NewProject = () => {\n  return (\n    <>\n      <Nav active=\"Projects\" />\n      <StoryContent />\n    </>\n  )\n}\n\nexport default NewProject\n","import React from 'react'\nimport {\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  StructuredListRow,\n  StructuredListCell,\n} from 'carbon-components-react'\n\nconst Summary = ({ data }) => (\n  <StructuredListWrapper style={{ marginBottom: '2vh' }}>\n    <StructuredListHead>\n      <StructuredListRow head>\n        <StructuredListCell head>Title</StructuredListCell>\n        <StructuredListCell head>Content</StructuredListCell>\n      </StructuredListRow>\n    </StructuredListHead>\n    <StructuredListBody>\n      <StructuredListRow>\n        <StructuredListCell>Project No.</StructuredListCell>\n        <StructuredListCell>{data.proj_no}</StructuredListCell>\n      </StructuredListRow>\n      <StructuredListRow>\n        <StructuredListCell>Project Name</StructuredListCell>\n        <StructuredListCell>{data.proj_name}</StructuredListCell>\n      </StructuredListRow>\n      <StructuredListRow>\n        <StructuredListCell>Start Date</StructuredListCell>\n        <StructuredListCell>{data.start_date}</StructuredListCell>\n      </StructuredListRow>\n      <StructuredListRow>\n        <StructuredListCell>End Date</StructuredListCell>\n        <StructuredListCell>{data.end_date}</StructuredListCell>\n      </StructuredListRow>\n      <StructuredListRow>\n        <StructuredListCell>Client Name (Korean)</StructuredListCell>\n        <StructuredListCell>{data.cli_name_ko}</StructuredListCell>\n      </StructuredListRow>\n      <StructuredListRow>\n        <StructuredListCell>Client Name (English)</StructuredListCell>\n        <StructuredListCell>{data.cli_name_en}</StructuredListCell>\n      </StructuredListRow>\n    </StructuredListBody>\n  </StructuredListWrapper>\n)\n\nexport default Summary\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { useParams } from 'react-router'\nimport { Button, Loading } from 'carbon-components-react'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nimport Nav from '../../components/Nav'\nimport Summary from './Summary'\n\n// FIXME: not responsive.\nconst Wrapper = styled.p`\n  min-height: 75vh;\n  width: 100vw;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StoryContent = () => {\n  const { proj_no } = useParams()\n  const [data, setData] = useState()\n  const [toTeamMembers, setToMembers] = useState(false)\n\n  useEffect(() => {\n    axios\n      .get(`/api/projects/${proj_no}`)\n      .then(res => {\n        setData(res.data[0])\n      })\n      .catch(err => console.log(err))\n  }, [proj_no])\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--offset-lg-3 bx--col-lg-13\">\n          <p style={{ width: '100%', margin: '5vh 0' }}>\n            {data ? (\n              <Summary data={data} />\n            ) : (\n              <Wrapper>\n                <Loading className=\"loading\" />\n              </Wrapper>\n            )}\n          </p>\n          <Button onClick={() => setToMembers(true)}>Team Members</Button>\n        </div>\n      </div>\n    </div>\n  )\n\n  if (toTeamMembers) {\n    return <Redirect to={`/projects/detail/${proj_no}/team_members`} />\n  }\n\n  return (\n    <Content\n      id=\"main-content\"\n      style={{ margin: '0', width: '100%', height: '100%' }}\n    >\n      {content}\n    </Content>\n  )\n}\n\nconst ProjectDetail = () => {\n  return (\n    <>\n      <Nav active=\"Projects\" />\n      <StoryContent />\n    </>\n  )\n}\n\nexport default ProjectDetail\n","import React from 'react'\nimport { Tile } from 'carbon-components-react'\n\nconst Member = ({ data }) => {\n  return (\n    <>\n      {data.map(v => (\n        <Tile\n          key={v.member_id}\n          style={{ marginBottom: '2vh', minWidth: '180px', width: '70vw' }}\n        >\n          <h2>{v.role}</h2>\n          <h4>{v.emp_name}</h4>\n          <p>{v.emp_no}</p>\n          <p>{`Join Date: ${v.join_date}`}</p>\n          <p>\n            {v.out_date ? `Out Date: ${v.out_date}` : 'Out Date: Working...'}\n          </p>\n        </Tile>\n      ))}\n    </>\n  )\n}\n\nexport default Member\n","import React, { useState, useEffect } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { useParams } from 'react-router'\nimport { Button, Loading } from 'carbon-components-react'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nimport Nav from '../../../components/Nav'\nimport Member from './Member'\n\n// FIXME: not responsive.\nconst Wrapper = styled.p`\n  min-height: 75vh;\n  width: 100vw;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StoryContent = () => {\n  const { proj_no } = useParams()\n  const [data, setData] = useState()\n  const [toNew, setToNew] = useState(false)\n\n  useEffect(() => {\n    axios\n      .get(`/api/team_members/${proj_no}`)\n      .then(res => {\n        setData(res.data)\n      })\n      .catch(err => console.log(err))\n  }, [proj_no])\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--offset-lg-3 bs--col-lg-13\">\n          <p style={{ width: '100%', margin: '5vh 0' }}>\n            {data ? (\n              <Member data={data} />\n            ) : (\n              <Wrapper>\n                <Loading className=\"loading\" />\n              </Wrapper>\n            )}\n          </p>\n          <Button onClick={() => setToNew(true)}>New Team Member</Button>\n        </div>\n      </div>\n    </div>\n  )\n\n  if (toNew) {\n    return <Redirect to={`/projects/detail/${proj_no}/team_members/new`} />\n  }\n\n  return (\n    <Content\n      id=\"main-content\"\n      style={{ margin: '0', width: '100%', height: '100%' }}\n    >\n      {content}\n    </Content>\n  )\n}\n\nconst TeamMembers = () => {\n  return (\n    <>\n      <Nav active=\"Projects\" />\n      <StoryContent />\n    </>\n  )\n}\n\nexport default TeamMembers\n","import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport {\n  Button,\n  DatePicker,\n  DatePickerInput,\n  Form,\n  Select,\n  SelectItem,\n} from 'carbon-components-react'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nimport Nav from '../../../components/Nav'\nimport DateFormat from '../../../utils/DateFormat'\n\nconst StoryContent = () => {\n  const { proj_no } = useParams()\n  const [devList, setDevList] = useState()\n  const [empNo, setEmpNo] = useState()\n  const [role, setRole] = useState()\n  const [joinDate, setJoinDate] = useState()\n  const [outDate, setOutDate] = useState()\n  const [toMember, setToMember] = useState(false)\n\n  useEffect(() => {\n    axios\n      .get('/api/employees?dept=4004')\n      .then(res => {\n        setDevList(res.data)\n      })\n      .catch(err => console.log(err))\n  }, [proj_no])\n\n  const sendData = () => {\n    const url = `/api/team_members/${proj_no}`\n    const formData = {\n      emp_no: empNo,\n      role: role,\n      join_date: DateFormat(joinDate, '-'),\n      out_date: outDate ? DateFormat(outDate, '-') : null,\n    }\n\n    return axios({ method: 'POST', url, data: formData }).catch(err =>\n      console.log(err)\n    )\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault()\n    sendData()\n    setToMember(true)\n  }\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--offset-lg-3 bx--col-lg-13\">\n          <p style={{ margin: '5vh 0 ' }}>\n            <Form onSubmit={handleFormSubmit}>\n              <Select\n                defaultValue=\"placeholder-item\"\n                labelText=\"Select Employee\"\n                onChange={e => {\n                  const {\n                    target: { value },\n                  } = e\n                  setEmpNo(value)\n                }}\n              >\n                <SelectItem\n                  disabled\n                  hidden\n                  value=\"placeholder-item\"\n                  text=\"Select employee\"\n                />\n                {devList ? (\n                  devList.map(v => (\n                    <SelectItem\n                      value={v.emp_no}\n                      text={`${v.emp_no} / ${v.emp_name}`}\n                    />\n                  ))\n                ) : (\n                  <SelectItem disabled value=\"fake\" text=\"Loading...\" />\n                )}\n              </Select>\n              <Select\n                defaultValue=\"placeholder-item\"\n                labelText=\"Select Role\"\n                onChange={e => {\n                  const {\n                    target: { value },\n                  } = e\n                  setRole(value)\n                }}\n              >\n                <SelectItem\n                  diabled\n                  hidden\n                  value=\"placeholder-item\"\n                  text=\"Select role\"\n                />\n                <SelectItem value=\"PM\" text=\"PM\" />\n                <SelectItem value=\"PL\" text=\"PL\" />\n                <SelectItem value=\"Analyst\" text=\"Analyst\" />\n                <SelectItem value=\"Designer\" text=\"Designer\" />\n                <SelectItem value=\"Programmer\" text=\"Programmer\" />\n                <SelectItem value=\"Tester\" text=\"Tester\" />\n              </Select>\n              <DatePicker\n                datePickerType=\"single\"\n                dateFormat={'Y/m/d'}\n                onClose={e => {\n                  setJoinDate(e[0])\n                }}\n              >\n                <DatePickerInput\n                  labelText=\"Join Date\"\n                  pattern=\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}\"\n                  placeholder=\"yyyy/mm/dd\"\n                />\n              </DatePicker>\n              <DatePicker\n                datePickerType=\"single\"\n                dateFormat={'Y/m/d'}\n                onClose={e => {\n                  setOutDate(e[0])\n                }}\n              >\n                <DatePickerInput\n                  labelText=\"Out Date\"\n                  pattern=\"[0-9]{4}/[0-9]{1,2}/[0-9]{1,2}\"\n                  placeholder=\"yyyy/mm/dd\"\n                />\n              </DatePicker>\n              <Button type=\"submit\" style={{ marginTop: '2vh' }}>\n                Submit\n              </Button>\n            </Form>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <>\n      {toMember ? (\n        <Redirect to={`/projects/detail/${proj_no}/team_members`} />\n      ) : (\n        <Content\n          id=\"main-content\"\n          style={{ margin: '0', width: '100%', height: '100%' }}\n        >\n          {content}\n        </Content>\n      )}\n    </>\n  )\n}\n\nconst NewTeamMember = () => {\n  return (\n    <>\n      <Nav active=\"Projects\" />\n      <StoryContent />\n    </>\n  )\n}\n\nexport default NewTeamMember\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { DataTable } from 'carbon-components-react'\nconst {\n  TableContainer,\n  Table,\n  TableHead,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n} = DataTable\n\nconst CustomTable = ({ data }) => {\n  // We would have a headers array like the following\n  const headers = [\n    {\n      // `key` is the name of the field on the row object itself for the header\n      key: 'cli_name_ko',\n      // `header` will be the name you want rendered in the Table Header\n      header: 'Client Name (Korean)',\n    },\n    {\n      key: 'cli_name_en',\n      header: 'Client Name (English)',\n    },\n    {\n      key: 'representative',\n      header: 'Representative',\n    },\n    {\n      key: 'handsel',\n      header: 'Handsel',\n    },\n  ]\n\n  data.map(v => (v['id'] = v.cli_id))\n\n  return (\n    <DataTable\n      rows={data}\n      headers={headers}\n      render={({ rows, headers, getHeaderProps }) => (\n        <TableContainer title=\"Clients\">\n          <Table>\n            <TableHead>\n              <TableRow>\n                {headers.map(header => (\n                  <TableHeader {...getHeaderProps({ header })}>\n                    {header.header}\n                  </TableHeader>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {rows.map(row => (\n                <TableRow key={row.id}>\n                  {row.cells.map(cell => (\n                    <TableCell key={cell.id}>\n                      {cell.value ? cell.value : '-'}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    />\n  )\n}\n\nCustomTable.propTypes = {\n  data: PropTypes.array.isRequired,\n}\n\nexport default CustomTable\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport { Button, Loading } from 'carbon-components-react'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nimport Nav from '../components/Nav'\nimport ClientTable from '../components/ClientTable'\n\n// FIXME: not responsive.\nconst Wrapper = styled.p`\n  min-height: 75vh;\n  width: 100vw;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StoryContent = () => {\n  const [data, setData] = useState()\n\n  useEffect(() => {\n    axios\n      .get('/api/clients')\n      .then(res => {\n        setData(res.data)\n      })\n      .catch(err => console.log(err))\n  }, [])\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--offset-lg-3 bx--col-lg-13\">\n          <p style={{ margin: '5vh 0' }}>\n            {data ? (\n              <ClientTable data={data} />\n            ) : (\n              <Wrapper>\n                <Loading className=\"loading\" />\n              </Wrapper>\n            )}\n          </p>\n          <Button href=\"/clients/new\">New Client</Button>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <Content\n      id=\"main-content\"\n      style={{\n        margin: '0',\n        height: '100%',\n        width: '100%',\n      }}\n    >\n      {content}\n    </Content>\n  )\n}\n\nconst Client = () => {\n  return (\n    <>\n      <Nav active=\"Clients\" />\n      <StoryContent />\n    </>\n  )\n}\n\nexport default Client\n","import React, { useState } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport { Button, Form, TextInput } from 'carbon-components-react'\nimport { Content } from 'carbon-components-react/lib/components/UIShell'\n\nimport { useInput } from '../hooks/useInput'\nimport Nav from '../components/Nav'\n\nconst StoryContent = () => {\n  const cliNameKo = useInput('')\n  const cliNameEn = useInput('')\n  const rep = useInput('')\n  const handsel = useInput('')\n  const [toClient, setToClient] = useState(false)\n\n  const sendData = () => {\n    const url = '/api/clients'\n    const formData = {\n      cli_name_ko: cliNameKo.value,\n      cli_name_en: cliNameEn.value,\n      representative: rep.value,\n      handsel: handsel.value ? handsel.value : null,\n    }\n\n    return axios({ method: 'POST', url, data: formData }).catch(err =>\n      console.log(err)\n    )\n  }\n\n  const handleFormSubmit = e => {\n    e.preventDefault()\n    sendData()\n    setToClient(true)\n  }\n\n  const content = (\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--offset-lg-3 bx--col-lg-13\">\n          <p style={{ margin: '5vh 0' }}>\n            <Form onSubmit={handleFormSubmit} formNoValidate>\n              <TextInput labelText=\"Client Name (Korean)\" {...cliNameKo} />\n              <TextInput labelText=\"Client Name (English)\" {...cliNameEn} />\n              <TextInput labelText=\"Representative\" {...rep} />\n              <TextInput labelText=\"Handsel (optional)\" {...handsel} />\n              <Button type=\"submit\" style={{ marginTop: '2vh' }}>\n                Submit\n              </Button>\n            </Form>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n\n  return (\n    <>\n      {toClient ? (\n        <Redirect to=\"/clients\" />\n      ) : (\n        <Content\n          id=\"main-content\"\n          style={{ margin: '0', width: '100%', height: '100%' }}\n        >\n          {content}\n        </Content>\n      )}\n    </>\n  )\n}\n\nconst NewClient = () => {\n  return (\n    <>\n      <Nav active=\"Clients\" />\n      <StoryContent />\n    </>\n  )\n}\n\nexport default NewClient\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport Auth from '../routes/Auth'\nimport Dashboard from '../routes/Dashboard'\nimport Employee from '../routes/Employee'\nimport EmployeeDev from '../routes/EmployeeDev'\nimport NewEmployee from '../routes/NewEmployee'\nimport Project from '../routes/Project'\nimport NewProject from '../routes/NewProject'\nimport ProjectDetail from '../routes/ProjectDetail'\nimport TeamMembers from '../routes/ProjectDetail/TeamMembers'\nimport NewTeamMembers from '../routes/ProjectDetail/TeamMembers/NewTeamMember'\nimport Client from '../routes/Client'\nimport NewClient from '../routes/NewClient'\n\n// if logged in\nconst LoggedInRoutes = () => (\n  <>\n    <Route exact path=\"/\" component={Dashboard} />\n    <Route exact path=\"/employees\" component={Employee} />\n    <Route exact path=\"/employees/dev\" component={EmployeeDev} />\n    <Route exact path=\"/employees/new\" component={NewEmployee} />\n    <Route exact path=\"/projects\" component={Project} />\n    <Route exact path=\"/projects/new\" component={NewProject} />\n    <Route exact path=\"/projects/detail/:proj_no\" component={ProjectDetail} />\n    <Route\n      exact\n      path=\"/projects/detail/:proj_no/team_members\"\n      component={TeamMembers}\n    />\n    <Route\n      exact\n      path=\"/projects/detail/:proj_no/team_members/new\"\n      component={NewTeamMembers}\n    />\n    <Route exact path=\"/clients\" component={Client} />\n    <Route exact path=\"/clients/new\" component={NewClient} />\n  </>\n)\n\n// if not logged in\nconst LoggedOutRoutes = () => (\n  <>\n    <Route exact path=\"/\" component={Auth} />\n  </>\n)\n\nconst AppRouter = ({ isLoggedIn }) => (\n  <Router>\n    <Switch>{isLoggedIn ? <LoggedInRoutes /> : <LoggedOutRoutes />}</Switch>\n  </Router>\n)\n\nAppRouter.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n}\n\nexport default AppRouter\n","import React from 'react'\n\nimport Router from './components/Router'\n\nconst App = () => {\n  return <Router isLoggedIn={true} />\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}